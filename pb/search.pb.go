// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

// protoc --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` search.proto
// protoc --cpp_out=. search.proto
// protoc --go_out=plugins=grpc:. search.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Feature struct {
	Feature              []float32 `protobuf:"fixed32,1,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetFeature() []float32 {
	if m != nil {
		return m.Feature
	}
	return nil
}

type UserInfo struct {
	Group                string    `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Id                   string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Feature              []float32 `protobuf:"fixed32,3,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *UserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserInfo) GetFeature() []float32 {
	if m != nil {
		return m.Feature
	}
	return nil
}

type NomalReply struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NomalReply) Reset()         { *m = NomalReply{} }
func (m *NomalReply) String() string { return proto.CompactTextString(m) }
func (*NomalReply) ProtoMessage()    {}
func (*NomalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *NomalReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NomalReply.Unmarshal(m, b)
}
func (m *NomalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NomalReply.Marshal(b, m, deterministic)
}
func (m *NomalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NomalReply.Merge(m, src)
}
func (m *NomalReply) XXX_Size() int {
	return xxx_messageInfo_NomalReply.Size(m)
}
func (m *NomalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NomalReply.DiscardUnknown(m)
}

var xxx_messageInfo_NomalReply proto.InternalMessageInfo

func (m *NomalReply) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

type GroupsReply struct {
	Grops                []string `protobuf:"bytes,1,rep,name=grops,proto3" json:"grops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupsReply) Reset()         { *m = GroupsReply{} }
func (m *GroupsReply) String() string { return proto.CompactTextString(m) }
func (*GroupsReply) ProtoMessage()    {}
func (*GroupsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *GroupsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupsReply.Unmarshal(m, b)
}
func (m *GroupsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupsReply.Marshal(b, m, deterministic)
}
func (m *GroupsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupsReply.Merge(m, src)
}
func (m *GroupsReply) XXX_Size() int {
	return xxx_messageInfo_GroupsReply.Size(m)
}
func (m *GroupsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupsReply proto.InternalMessageInfo

func (m *GroupsReply) GetGrops() []string {
	if m != nil {
		return m.Grops
	}
	return nil
}

type SearchRequest struct {
	Group                string    `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Feature              []float32 `protobuf:"fixed32,2,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *SearchRequest) GetFeature() []float32 {
	if m != nil {
		return m.Feature
	}
	return nil
}

type SearchReply struct {
	Users                []*SearchReply_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{5}
}

func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (m *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(m, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetUsers() []*SearchReply_User {
	if m != nil {
		return m.Users
	}
	return nil
}

type SearchReply_User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Distance             float32  `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReply_User) Reset()         { *m = SearchReply_User{} }
func (m *SearchReply_User) String() string { return proto.CompactTextString(m) }
func (*SearchReply_User) ProtoMessage()    {}
func (*SearchReply_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{5, 0}
}

func (m *SearchReply_User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply_User.Unmarshal(m, b)
}
func (m *SearchReply_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply_User.Marshal(b, m, deterministic)
}
func (m *SearchReply_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply_User.Merge(m, src)
}
func (m *SearchReply_User) XXX_Size() int {
	return xxx_messageInfo_SearchReply_User.Size(m)
}
func (m *SearchReply_User) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply_User.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply_User proto.InternalMessageInfo

func (m *SearchReply_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchReply_User) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func init() {
	proto.RegisterType((*Feature)(nil), "pb.Feature")
	proto.RegisterType((*UserInfo)(nil), "pb.UserInfo")
	proto.RegisterType((*NomalReply)(nil), "pb.NomalReply")
	proto.RegisterType((*GroupsReply)(nil), "pb.GroupsReply")
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "pb.SearchReply")
	proto.RegisterType((*SearchReply_User)(nil), "pb.SearchReply.User")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4e, 0xe3, 0x30,
	0x10, 0xc6, 0x1b, 0xf7, 0x4f, 0xda, 0x69, 0xb7, 0xbb, 0x3b, 0xea, 0x21, 0xca, 0x61, 0x55, 0xb9,
	0x87, 0x2d, 0x1c, 0x22, 0x51, 0x24, 0xae, 0x08, 0x09, 0xb5, 0x02, 0x21, 0x0e, 0x46, 0x3c, 0x40,
	0xd2, 0x4c, 0x21, 0x52, 0xdb, 0xb8, 0xb6, 0x73, 0xe0, 0x95, 0x79, 0x0a, 0x64, 0x9b, 0x42, 0x8a,
	0xa8, 0xc4, 0x6d, 0xbe, 0x78, 0xf2, 0xfb, 0xbe, 0x19, 0x1b, 0x06, 0x9a, 0x52, 0xb5, 0x7c, 0x4e,
	0xa4, 0x2a, 0x4d, 0x89, 0x4c, 0x66, 0x7c, 0x02, 0xe1, 0x9c, 0x52, 0x53, 0x29, 0xc2, 0x08, 0xc2,
	0x95, 0x2f, 0xa3, 0x60, 0xdc, 0x9c, 0x32, 0xb1, 0x97, 0xfc, 0x16, 0xba, 0x8f, 0x9a, 0xd4, 0xcd,
	0x76, 0x55, 0xe2, 0x08, 0xda, 0x4f, 0xaa, 0xac, 0x64, 0x14, 0x8c, 0x83, 0x69, 0x4f, 0x78, 0x81,
	0x43, 0x60, 0x45, 0x1e, 0x31, 0xf7, 0x89, 0x15, 0x79, 0x9d, 0xd5, 0x3c, 0x64, 0xfd, 0x03, 0xb8,
	0x2f, 0x37, 0xe9, 0x5a, 0x90, 0x5c, 0xbf, 0xe0, 0x1f, 0x68, 0x2a, 0x32, 0x8e, 0xd5, 0x15, 0xb6,
	0xe4, 0x13, 0xe8, 0x2f, 0x2c, 0x52, 0xfb, 0x06, 0x6f, 0x27, 0xb5, 0x8b, 0xe4, 0xed, 0xa4, 0xe6,
	0x97, 0xf0, 0xeb, 0xc1, 0x4d, 0x22, 0x68, 0x57, 0x91, 0x36, 0x47, 0x52, 0xd5, 0x52, 0xb0, 0xc3,
	0x14, 0x3b, 0xe8, 0xef, 0x01, 0xd6, 0xe5, 0x14, 0xda, 0x95, 0x26, 0xe5, 0x5d, 0xfa, 0xb3, 0x51,
	0x22, 0xb3, 0xa4, 0x76, 0x9e, 0xd8, 0xe9, 0x85, 0x6f, 0x89, 0x2f, 0xa0, 0x65, 0x25, 0x22, 0xb4,
	0xb6, 0xe9, 0x86, 0xde, 0x1d, 0x5d, 0x8d, 0x31, 0x74, 0xf3, 0x42, 0x9b, 0x74, 0xbb, 0x24, 0xb7,
	0x0c, 0x26, 0x3e, 0xf4, 0xec, 0x35, 0x80, 0xce, 0x3c, 0x5d, 0x52, 0x9e, 0x61, 0x02, 0x1d, 0x4f,
	0xc7, 0xbf, 0x75, 0x27, 0x37, 0x4a, 0xfc, 0xfb, 0x8b, 0x39, 0x6f, 0xe0, 0x19, 0xf4, 0xdc, 0x4e,
	0xee, 0x0a, 0x6d, 0x8e, 0xfe, 0x52, 0xdb, 0x1a, 0x6f, 0xe0, 0x09, 0x84, 0x57, 0x79, 0xee, 0x82,
	0x0e, 0xec, 0xe9, 0xfe, 0xfe, 0xe2, 0xa1, 0x55, 0x9f, 0x37, 0xc0, 0x1b, 0xf8, 0x1f, 0xc2, 0x05,
	0x99, 0x6f, 0x5a, 0x0f, 0x94, 0x67, 0x5e, 0xd3, 0xfa, 0x27, 0xcc, 0xac, 0xe3, 0x5e, 0xd8, 0xf9,
	0x5b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xc7, 0x7c, 0x8f, 0x71, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FacedbClient is the client API for Facedb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FacedbClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error)
	GroupList(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*GroupsReply, error)
	AddUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*NomalReply, error)
	GetUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error)
	DelUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*NomalReply, error)
}

type facedbClient struct {
	cc *grpc.ClientConn
}

func NewFacedbClient(cc *grpc.ClientConn) FacedbClient {
	return &facedbClient{cc}
}

func (c *facedbClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := c.cc.Invoke(ctx, "/pb.Facedb/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facedbClient) GroupList(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*GroupsReply, error) {
	out := new(GroupsReply)
	err := c.cc.Invoke(ctx, "/pb.Facedb/GroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facedbClient) AddUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*NomalReply, error) {
	out := new(NomalReply)
	err := c.cc.Invoke(ctx, "/pb.Facedb/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facedbClient) GetUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/pb.Facedb/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facedbClient) DelUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*NomalReply, error) {
	out := new(NomalReply)
	err := c.cc.Invoke(ctx, "/pb.Facedb/DelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FacedbServer is the server API for Facedb service.
type FacedbServer interface {
	Search(context.Context, *SearchRequest) (*SearchReply, error)
	GroupList(context.Context, *SearchRequest) (*GroupsReply, error)
	AddUser(context.Context, *UserInfo) (*NomalReply, error)
	GetUser(context.Context, *UserInfo) (*UserInfo, error)
	DelUser(context.Context, *UserInfo) (*NomalReply, error)
}

func RegisterFacedbServer(s *grpc.Server, srv FacedbServer) {
	s.RegisterService(&_Facedb_serviceDesc, srv)
}

func _Facedb_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacedbServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Facedb/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacedbServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Facedb_GroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacedbServer).GroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Facedb/GroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacedbServer).GroupList(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Facedb_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacedbServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Facedb/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacedbServer).AddUser(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Facedb_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacedbServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Facedb/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacedbServer).GetUser(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Facedb_DelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacedbServer).DelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Facedb/DelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacedbServer).DelUser(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Facedb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Facedb",
	HandlerType: (*FacedbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Facedb_Search_Handler,
		},
		{
			MethodName: "GroupList",
			Handler:    _Facedb_GroupList_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _Facedb_AddUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Facedb_GetUser_Handler,
		},
		{
			MethodName: "DelUser",
			Handler:    _Facedb_DelUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
