// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

/*
Package pb is a generated protocol buffer package.

protoc --grpc_out=. --plugin=protoc-gen-pb=`which grpc_cpp_plugin` search.proto
protoc --cpp_out=. search.proto

It is generated from these files:
	search.proto

It has these top-level messages:
	SearchRequest
	SearchReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchRequest struct {
	Name []float32 `protobuf:"fixed32,1,rep,packed,name=name" json:"name,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetName() []float32 {
	if m != nil {
		return m.Name
	}
	return nil
}

type SearchReply struct {
	Users []*SearchReply_User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *SearchReply) Reset()                    { *m = SearchReply{} }
func (m *SearchReply) String() string            { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()               {}
func (*SearchReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchReply) GetUsers() []*SearchReply_User {
	if m != nil {
		return m.Users
	}
	return nil
}

type SearchReply_User struct {
	Name     string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Distance float32 `protobuf:"fixed32,2,opt,name=distance" json:"distance,omitempty"`
}

func (m *SearchReply_User) Reset()                    { *m = SearchReply_User{} }
func (m *SearchReply_User) String() string            { return proto.CompactTextString(m) }
func (*SearchReply_User) ProtoMessage()               {}
func (*SearchReply_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *SearchReply_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchReply_User) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "pb.SearchReply")
	proto.RegisterType((*SearchReply_User)(nil), "pb.SearchReply.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Searcher service

type SearcherClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error)
}

type searcherClient struct {
	cc *grpc.ClientConn
}

func NewSearcherClient(cc *grpc.ClientConn) SearcherClient {
	return &searcherClient{cc}
}

func (c *searcherClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := grpc.Invoke(ctx, "/pb.Searcher/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Searcher service

type SearcherServer interface {
	Search(context.Context, *SearchRequest) (*SearchReply, error)
}

func RegisterSearcherServer(s *grpc.Server, srv SearcherServer) {
	s.RegisterService(&_Searcher_serviceDesc, srv)
}

func _Searcher_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearcherServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Searcher/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearcherServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Searcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Searcher",
	HandlerType: (*SearcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Searcher_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}

func init() { proto.RegisterFile("search.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x4d, 0x2c,
	0x4a, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe6, 0xe2,
	0x0d, 0x06, 0x8b, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25,
	0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6b, 0x30, 0x05, 0x81, 0xd9, 0x4a, 0x85, 0x5c, 0xdc, 0x30,
	0x45, 0x05, 0x39, 0x95, 0x42, 0x5a, 0x5c, 0xac, 0xa5, 0xc5, 0xa9, 0x45, 0xc5, 0x60, 0x35, 0xdc,
	0x46, 0x22, 0x7a, 0x05, 0x49, 0x7a, 0x48, 0xf2, 0x7a, 0xa1, 0xc5, 0xa9, 0x45, 0x41, 0x10, 0x25,
	0x52, 0x66, 0x5c, 0x2c, 0x20, 0x2e, 0x92, 0xb1, 0x8c, 0x1a, 0x9c, 0x10, 0x63, 0x85, 0xa4, 0xb8,
	0x38, 0x52, 0x32, 0x8b, 0x4b, 0x12, 0xf3, 0x92, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x98, 0x82,
	0xe0, 0x7c, 0x23, 0x2b, 0x2e, 0x0e, 0x88, 0x91, 0xa9, 0x45, 0x42, 0x7a, 0x5c, 0x6c, 0x10, 0xb6,
	0x90, 0x20, 0xb2, 0x55, 0x60, 0xf7, 0x4a, 0xf1, 0xa3, 0xd9, 0xae, 0xc4, 0x90, 0xc4, 0x06, 0xf6,
	0x9e, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x82, 0x7b, 0x64, 0xee, 0x00, 0x00, 0x00,
}
